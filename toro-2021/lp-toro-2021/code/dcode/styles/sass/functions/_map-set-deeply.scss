@import "str-split";

@function map-set-deeply($map, $notation, $value) {
	$keys: str-split($notation, '.');
	$maps: ($map,);
	$result: null;
	@if type-of(nth($keys, -1)) == 'map' {
		@warn 'The last key you specified is a map; it will be overrided with `#{$value}`.';
	}
	@if length($keys) == 1 {
		@return map-merge($map, ($keys: $value));
	}
	@for $i from 1 through length($keys) - 1 {
		$currentKey: nth($keys, $i);
		$currentMap: nth($maps, -1);
		$currentGet: map-get($currentMap, $currentKey);
		@if $currentGet == null {
			@error 'Key `#{$key}` doesn\'t exist at current level in map.';
		}
		$maps: append($maps, $currentGet);
	}
	@for $i from length($maps) through 1 {
		$currentMap: nth($maps, $i);
		$currentKey: nth($keys, $i);
		$current-val: if($i == length($maps), $value, $result);
		$result: map-merge($currentMap, ($currentKey: $current-val));
	}
	@return $result;
}
